name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  # Job para varredura de seguran√ßa Ruby (Brakeman)
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  # Job para varredura de seguran√ßa JavaScript (Importmap)
  scan_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  # Job para linting de c√≥digo (Rubocop)
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  # Job principal para execu√ß√£o dos testes
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0 # √â crucial especificar a vers√£o, use a que voc√™ usa localmente (ex: mysql:8.0)
        env:
          MYSQL_ROOT_PASSWORD: "" # Sua senha de root. Se voc√™ tem uma, coloque-a aqui.
                                  # Se for vazia como no seu CI, use aspas vazias.
          MYSQL_DATABASE: onibus_app_test # Nome do seu banco de dados de TESTE
        ports:
          - "3306:3306"
        options: >- # Usado para m√∫ltiplas op√ß√µes em uma linha
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10 # Aumentei o retries para dar mais tempo ao MySQL

    steps:
      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev build-essential git pkg-config google-chrome-stable # Adicionado build-essential e pkg-config
                                                                                                                   # para algumas gems nativas

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Configure database.yml for CI
        run: |
          # Criar ou ajustar o database.yml para o ambiente de CI
          # Esta √© uma forma gen√©rica. Adapte-a ao seu database.yml real!
          # Certifique-se que a se√ß√£o 'test:' do seu database.yml aponte para:
          #   host: 127.0.0.1
          #   username: root
          #   password:
          #   database: onibus_app_test
          cat << EOF > config/database.yml
          default: &default
            adapter: mysql2
            encoding: utf8mb4
            pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
            username: root
            password: <%= ENV['MYSQL_ROOT_PASSWORD'] %>
            host: 127.0.0.1 # O host deve ser 127.0.0.1 para acessar o servi√ßo MySQL
            port: 3306

          development:
            <<: *default
            database: onibus_app_development # Use o nome do seu banco de dev

          test:
            <<: *default
            database: onibus_app_test # O nome do banco de dados de teste
          EOF

      - name: Wait for MySQL to be ready ‚è≥
        # Tenta conectar ao MySQL at√© que esteja dispon√≠vel
        run: |
          sudo apt-get install -y mysql-client # Instala o cliente MySQL para o comando 'mysql'
          until mysql -h 127.0.0.1 -P 3306 -u root -p"${MYSQL_ROOT_PASSWORD}" -e "SELECT 1"; do
            echo "Waiting for MySQL service..."
            sleep 5
          done
          echo "MySQL is up and running!"
        env:
          MYSQL_ROOT_PASSWORD: ${{ services.mysql.env.MYSQL_ROOT_PASSWORD }} # Passa a senha do servi√ßo

      - name: Create and Migrate Test Database üíæ
        run: |
          # Use db:test:prepare para criar o banco de dados de teste e rodar as migra√ß√µes
          bin/rails db:test:prepare
        env:
          RAILS_ENV: test
          # DATABASE_URL: mysql2://root:${{ services.mysql.env.MYSQL_ROOT_PASSWORD }}@127.0.0.1:3306/onibus_app_test # Opcional se database.yml estiver corret

      - name: Run RSpec tests üöÄ
        run: bundle exec rspec
        env:
          RAILS_ENV: test
          # DATABASE_URL: mysql2://root:${{ services.mysql.env.MYSQL_ROOT_PASSWORD }}@127.0.0.1:3306/onibus_app_test # Opcional

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore # Continuar mesmo se n√£o houver screenshots
